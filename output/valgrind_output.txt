==1626867== Memcheck, a memory error detector
==1626867== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1626867== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==1626867== Command: ./output/ociBuild build --tag image:latest .
==1626867== Parent PID: 959812
==1626867== 
==1626867== 
==1626867== HEAP SUMMARY:
==1626867==     in use at exit: 141,978 bytes in 961 blocks
==1626867==   total heap usage: 48,718 allocs, 47,757 frees, 447,244,436 bytes allocated
==1626867== 
==1626867== 44,471 (400 direct, 44,071 indirect) bytes in 1 blocks are definitely lost in loss record 773 of 773
==1626867==    at 0x4846FA3: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==1626867==    by 0x4C209E: std::__new_allocator<std::_Sp_counted_ptr_inplace<StageExecutor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:151)
==1626867==    by 0x4BFA0C: allocate (alloc_traits.h:482)
==1626867==    by 0x4BFA0C: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<StageExecutor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<StageExecutor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<StageExecutor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
==1626867==    by 0x4BDC3E: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<StageExecutor, std::allocator<void>>(StageExecutor*&, std::_Sp_alloc_shared_tag<std::allocator<void> >) (shared_ptr_base.h:969)
==1626867==    by 0x4BAE5D: std::__shared_ptr<StageExecutor, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>>(std::_Sp_alloc_shared_tag<std::allocator<void> >) (shared_ptr_base.h:1712)
==1626867==    by 0x4B7968: std::shared_ptr<StageExecutor>::shared_ptr<std::allocator<void>>(std::_Sp_alloc_shared_tag<std::allocator<void> >) (shared_ptr.h:464)
==1626867==    by 0x4B48BC: std::shared_ptr<std::enable_if<!std::is_array<StageExecutor>::value, StageExecutor>::type> std::make_shared<StageExecutor>() (shared_ptr.h:1010)
==1626867==    by 0x4AF74D: Executor::startStage(std::shared_ptr<Stage>, std::shared_ptr<Stages>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (executor.cpp:665)
==1626867==    by 0x4AE36A: Executor::buildStage[abi:cxx11](std::map<int, std::shared_ptr<StageExecutor>, std::less<int>, std::allocator<std::pair<int const, std::shared_ptr<StageExecutor> > > >, std::shared_ptr<Stages>, int) (executor.cpp:583)
==1626867==    by 0x4AB486: Executor::Build[abi:cxx11](std::shared_ptr<Stages>) (executor.cpp:378)
==1626867==    by 0x49FA8A: buildDockerfilesOnce(std::shared_ptr<Store>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<define_BuildOptions>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >&) (build.cpp:268)
==1626867==    by 0x49E610: BuildDockerfiles(std::shared_ptr<Store>, std::shared_ptr<define_BuildOptions>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::shared_ptr<Canonical_interface>) (build.cpp:191)
==1626867== 
==1626867== LEAK SUMMARY:
==1626867==    definitely lost: 400 bytes in 1 blocks
==1626867==    indirectly lost: 44,071 bytes in 266 blocks
==1626867==      possibly lost: 0 bytes in 0 blocks
==1626867==    still reachable: 97,507 bytes in 694 blocks
==1626867==         suppressed: 0 bytes in 0 blocks
==1626867== Reachable blocks (those to which a pointer was found) are not shown.
==1626867== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1626867== 
==1626867== For lists of detected and suppressed errors, rerun with: -s
==1626867== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
